// prisma/schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user {
  id                String        @id @default(uuid())
  clerkUserId       String        @unique
  email             String        @unique
  name              String?
  imageUrl          String?         
  industry          String?         
  IndusrtyInsights  IndusrtyInsights? @relation(fields: [industry], references: [industry])
  createdAt         DateTime      @default(now())
  updatedAt         DateTime      @updatedAt

  // profile

  bio               String?
  experience        int?
  skills            String[]

  assessments       Assessment[]
  resume            Resume?
  coverLetter       CoverLetter[]
}

model Assessment{
  id                String        @id @default(uuid())
  userId            String        @unique
  user              user          @relation(fields: [userId], references: [id])
  quizScore         Float
  questions         Json[]
  category          String
  improvementTip    String?
  createdAt         DateTime      @default(now())
  updatedAt         DateTime      @updatedAt


  @@index([userId])



}
model Resume{
  id                String        @id @default(uuid())
  userId            String        @unique
  user              user          @relation(fields: [userId], references: [id])
  content           String?       @db.Text
  atsScore          Float?
  feedback          String?
  createdAt         DateTime      @default(now())
  updatedAt         DateTime      @updatedAt


}
model CoverLetter{
  id                String        @id @default(uuid())
  userId            String        @unique
  user              user          @relation(fields: [userId], references: [id])
  content           String
  jobDescription    String?
  companyName       String
  JobTitle          String
  createdAt         DateTime      @default(now())
  updatedAt         DateTime      @updatedAt

    @@index([userId])


}
model IndusrtyInsights{
    id                   String        @id @default(uuid())
    industry             String        @unique
   
    users                User[]
    salaryRanges         Json[] 

    growthRate           Float
    demandLevel          DemandLevel
    topSkills            String[]        

    marketOutlook        MarketOutlook
    keyTrends            String[]

    recommendedSkills    String[]

    lastUpdated          DateTime      @default(now())
    nextUpdate           DateTime

    @@index([industry])
}


enum DemandLevel{
  HIGH
  NEUTRAL
  NEGATIVE
}

enum MarketOutlook{
  POSITIVE
  NEUTRAL
  NEGATIVE
}


